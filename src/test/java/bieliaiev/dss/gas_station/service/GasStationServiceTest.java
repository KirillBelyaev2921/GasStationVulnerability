package bieliaiev.dss.gas_station.service;

import bieliaiev.dss.gas_station.dto.GasStationDataDTO;
import bieliaiev.dss.gas_station.dto.SelectedOptionDTO;
import bieliaiev.dss.gas_station.model.GasStation;
import bieliaiev.dss.gas_station.model.choice.FeatureSelectOption;
import bieliaiev.dss.gas_station.model.choice.FeatureSelectQuestion;
import bieliaiev.dss.gas_station.model.feature.Feature;
import bieliaiev.dss.gas_station.repository.choice.FeatureSelectOptionRepository;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureWebMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.when;

@AutoConfigureWebMvc
@SpringBootTest
class GasStationServiceTest {

    @Autowired
    private GasStationService service;

    @MockBean
    private FeatureSelectOptionRepository optionRepository;


    @Test
    void addDataToGasStationFromDTO() {

        GasStation gasStation = new GasStation();
        GasStationDataDTO dataDTO = new GasStationDataDTO();
        SelectedOptionDTO option1 = new SelectedOptionDTO();
        option1.setId(1);
        SelectedOptionDTO option2 = new SelectedOptionDTO();
        option2.setId(2);
        dataDTO.setOptionList(List.of(option1, option2));

        FeatureSelectOption returnOption1 = new FeatureSelectOption("O1", 0.5);
        FeatureSelectOption returnOption2 = new FeatureSelectOption("O2", 0.5);

        FeatureSelectQuestion question1 = new FeatureSelectQuestion("question", 1,
                new Feature("FEATURE1"), List.of(returnOption1));
        FeatureSelectQuestion question2 = new FeatureSelectQuestion("question", 1,
                new Feature("FEATURE2"), List.of(returnOption2));

        when(optionRepository.findAllById(dataDTO.getOptionList().stream()
                .map(SelectedOptionDTO::getId)
                .toList()))
                .thenReturn(List.of(returnOption1, returnOption2));


        returnOption1.setFeatureSelectQuestion(question1);
        returnOption2.setFeatureSelectQuestion(question2);


        service.addDataToGasStationFromDTO(gasStation, dataDTO);

        assertThat(gasStation.getDataList()).isNotNull();
        assertThat(gasStation.getDataList().size()).isEqualTo(2);
        assertThat(gasStation.getDataList().get(0).getScore()).isEqualTo(0.5);
        assertThat(gasStation.getDataList().get(1).getScore()).isEqualTo(0.5);
    }

    @Test
    void addDataToGasStationFromDTOWithToOption() {

        GasStation gasStation = new GasStation();
        GasStationDataDTO dataDTO = new GasStationDataDTO();
        SelectedOptionDTO option1 = new SelectedOptionDTO();
        option1.setId(1);
        SelectedOptionDTO option2 = new SelectedOptionDTO();
        option2.setId(2);
        dataDTO.setOptionList(List.of(option1, option2));

        FeatureSelectOption returnOption1 = new FeatureSelectOption("O1", 0.5);
        FeatureSelectOption returnOption2 = new FeatureSelectOption("O2", 0.5);

        Feature feature = new Feature("FEATURE");
        FeatureSelectQuestion question1 = new FeatureSelectQuestion("question", 1,
                feature, List.of(returnOption1));
        FeatureSelectQuestion question2 = new FeatureSelectQuestion("question", 2,
                feature, List.of(returnOption2));

        returnOption1.setFeatureSelectQuestion(question1);
        returnOption2.setFeatureSelectQuestion(question2);


        when(optionRepository.findAllById(dataDTO.getOptionList().stream()
                .map(SelectedOptionDTO::getId)
                .toList()))
                .thenReturn(List.of(returnOption1, returnOption2));

        service.addDataToGasStationFromDTO(gasStation, dataDTO);

        assertThat(gasStation.getDataList()).isNotNull();
        assertThat(gasStation.getDataList().size()).isEqualTo(1);
        assertThat(gasStation.getDataList().get(0).getScore()).isEqualTo(1);
    }
}