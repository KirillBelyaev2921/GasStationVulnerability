package bieliaiev.dss.gas_station.controller;

import bieliaiev.dss.gas_station.dto.GasStationDataDTO;
import bieliaiev.dss.gas_station.model.GasStation;
import bieliaiev.dss.gas_station.model.interpretation.Interpretation;
import bieliaiev.dss.gas_station.service.FeatureQuestionService;
import bieliaiev.dss.gas_station.service.GasStationService;
import bieliaiev.dss.gas_station.service.InterpretationService;
import bieliaiev.dss.gas_station.service.WeightService;
import jakarta.validation.Valid;
import lombok.AllArgsConstructor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@AllArgsConstructor
@Controller
@RequestMapping("/gs/data")
@SessionAttributes("gasStation")
public class GasStationController {

    private final FeatureQuestionService questionService;
    private final GasStationService gasStationService;
    private final InterpretationService interpretationService;
    private final WeightService weightService;

    @GetMapping
    public String getDataForm(@ModelAttribute("data") GasStationDataDTO data, Model model) {

        model.addAttribute("questions", questionService.getAllQuestions());
        return "gs_data";
    }

    @PostMapping
    public String addDataForm(@Valid @ModelAttribute("data") GasStationDataDTO data, BindingResult bindingResult,
                              GasStation gasStation, Model model) {

        if (bindingResult.hasErrors()) {
            model.addAttribute("questions", questionService.getAllQuestions());
            return "gs_data";
        }
        gasStationService.addDataToGasStationFromDTO(gasStation, data);

        double gasStationVulnerability = interpretationService
                .findVulnerabilityScore(gasStation.getScoreMap(), weightService.getListOfScenarioFeatureWeights());
        Interpretation interpretation = interpretationService.getInterpretation(gasStationVulnerability);
        gasStation.setInterpretation(interpretation);
        gasStationService.save(gasStation);

        return "redirect:/gs/vulnerability";
    }

}
