package bieliaiev.dss.gas_station.model.choice;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import lombok.*;
import org.hibernate.proxy.HibernateProxy;

import java.util.Objects;

@Getter
@Setter
@ToString
@RequiredArgsConstructor
@NoArgsConstructor(force = true)
@Entity
public class FeatureSelectOption {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    private final String description;

    private final Double value;

    @ManyToOne(cascade = CascadeType.MERGE)
    @JoinColumn(name = "feature_question_id")
    private FeatureSelectQuestion featureSelectQuestion;

    private Integer optionIndex;

    @Column(unique = true)
    @NotNull
    private String optionCode;

    @PrePersist
    public void prePersist() {
        optionCode = featureSelectQuestion.getQuestionCode() + "_o" + optionIndex;
    }

    @Override
    public final boolean equals(Object o) {
        if (this == o) return true;
        if (o == null) return false;
        Class<?> oEffectiveClass = o instanceof HibernateProxy ? ((HibernateProxy) o).getHibernateLazyInitializer().getPersistentClass() : o.getClass();
        Class<?> thisEffectiveClass = this instanceof HibernateProxy ? ((HibernateProxy) this).getHibernateLazyInitializer().getPersistentClass() : this.getClass();
        if (thisEffectiveClass != oEffectiveClass) return false;
        FeatureSelectOption that = (FeatureSelectOption) o;
        return getId() != null && Objects.equals(getId(), that.getId());
    }

    @Override
    public final int hashCode() {
        return this instanceof HibernateProxy ? ((HibernateProxy) this).getHibernateLazyInitializer().getPersistentClass().hashCode() : getClass().hashCode();
    }
}
